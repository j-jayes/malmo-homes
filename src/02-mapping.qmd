---
title: "Untitled"
format: html
---


```{r}
library(tidyverse)
library(arrow)

# Read the data
df <- read_parquet("data/processed/hemnet_properties_transformed.parquet")

df <- df %>% distinct()

geodata <- read_parquet("data/geodata/address_cache.parquet")

# rename columns title, latitude, longitude
geodata <- geodata %>% rename(title = Title, latitude = Lat, longitude = Long)

# join the data so as to keep only the rows that have geodata
df <- df %>% left_join(geodata, by = c("title"))

df <- df %>% 
filter(!is.na(latitude))

# filter for type == "Lägenhet"
df <- df %>%
filter(type == "Lägenhet")

df %>% 


```



```{r}
library(sf)
library(ggmap)
# get a base map of Malmo, Sweden
malmo_bbox = c(left = 12.9, bottom = 55.53, right = 13.1, top = 55.65)

map <- get_stadiamap(malmo_bbox, zoom = 12, maptype = "alidade_smooth")

map %>% ggmap() +
  geom_point(data = df, aes(x = longitude, y = latitude), color = "red", size = 1)
```




```{r}

df_map <- df %>% 
mutate(location = fct_lump(location, 10)) %>% 
# filter(location != "Other") %>% 
mutate(location = str_remove(location, ", Malmö kommun"))

map %>% ggmap() +
  geom_point(data = df_map, aes(x = longitude, y = latitude, colour = location), size = 1) +
  theme(legend.position = "bottom")

```




```{r}
library(ggridges)

# make a ridge plot showing price_per_square_meter by location
df_map %>% 
mutate(location = fct_reorder(location, price_per_square_meter, .fun = median)) %>%
ggplot(aes(x = price_per_square_meter, y = location, fill = location)) +
  geom_density_ridges() +
  theme_minimal() +
  theme(legend.position = "none")

```



```{r}
df_map %>% 
mutate(location = fct_reorder(location, price_per_square_meter, .fun = median)) %>%
ggplot(aes(x = number_of_rooms, y = location, fill = location)) +
  geom_density_ridges(stat = "binline") +
  theme_minimal() +
  theme(legend.position = "none")


df_map %>% 
mutate(location = fct_reorder(location, price_per_square_meter, .fun = median)) %>%
ggplot(aes(x = price_per_square_meter, y = location, fill = location)) +
  geom_density_ridges(stat = "binline") +
  theme_minimal() +
  theme(legend.position = "none")
```



```{r}
# use stat_bin_hex to plot price_per_square_meter by location on a map
map %>% ggmap() +
  stat_summary_2d(data = df_map, aes(x = longitude, y = latitude, z = price_per_square_meter, colour = location), bins = 100) +
  scale_fill_viridis_c() +
  theme(legend.position = "bottom") +
  labs(fill = "Price per square meter", colour = "Location")
```





```{r}
map %>% ggmap() +
  stat_summary_2d(data = df_map, aes(x = longitude, y = latitude, z = price_per_square_meter, colour = location), bins = 100) +
  scale_fill_viridis_c() +
  theme(legend.position = "bottom") +
  labs(fill = "Price per square meter", colour = "Location")
```


